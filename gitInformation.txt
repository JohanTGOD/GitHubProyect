
Que es Git y Github


Creado por Linux tocbard

Un sistema de control de versiones como Git nos ayuda a guardar el historial de cambios y crecimiento de los archivos de nuestro proyecto.
En realidad, los cambios y diferencias entre las versiones de nuestros proyectos pueden tener similitudes, algunas veces los cambios pueden ser solo una palabra o una parte específica de un archivo específico. Git está optimizado para guardar todos estos cambios de forma atómica e incremental, o sea, aplicando cambios sobre los últimos cambios, estos sobre los cambios anteriores y así hasta el inicio de nuestro proyecto.
El comando para iniciar nuestro repositorio, o sea, indicarle a Git que queremos usar su sistema de control de versiones en nuestro proyecto, es git init.
El comando para que nuestro repositorio sepa de la existencia de un archivo o sus últimos cambios es git add. Este comando no almacena las actualizaciones de forma definitiva, solo las guarda en algo que conocemos como “Staging Area” (no te preocupes, lo entenderemos más adelante).
El comando para almacenar definitivamente todos los cambios que por ahora viven en el staging area es git commit. También podemos guardar un mensaje para recordar muy bien qué cambios hicimos en este commit con el argumento -m "Mensaje del commit".
Por último, si queremos mandar nuestros commits a un servidor remoto, un lugar donde todos podamos conectar nuestros proyectos, usamos el comando git push


¿Que son los archivos binarios(word) y que sucede cuanto uno lo intenta abrir en un ide o block de notas?
comand ls -al   
    ls significa listar
        ls listar
        - significa que van a ir unos argumnentos
            a ver archivos ocultos
            al significa traigame en una lista todos los archivos incluso los ocultos

untracked = sin rastrear
git init : Cuando digito este comando pasa lo siguiente
            Se crea en espacio la ram llamada staging y el repositorio

git add: envio el archivo a a staging area(En este momento ya se vuelve un archivo trackeado)
         Stagin es un area de preparacion antes de ir a  nuestro repositorio
    git rm --cached <file>
        Para sacar un archivo del stg area
git commit: se envia al repositorio nombre por defecto es master

CADA VEZ QUE HAGO UN COMMIT ES COMO SI GENERARA UNA NUEVA VERSION


head significa que es el commit mas actual

Ramas

git checkout no solo sirve para cambiarme de ramas sino tambien para pasarme a un especifico commit,
cuando me paso a un commit puedo hacer los cambios que quiera y puedo hasta comitearlos, pero no va a pasar nada
hasta que ese commit lo convierta en una rama para despues poder mergearlo
        git branch <new-branch-name> <commit ssh>

git nunca borra nada ¿Enronces que pasa cuando hago un hard?



llaves publicas y llaves privadas = cifrado asimetrico de un solo camino
    las llaves estan vinculadas matematicamente la una con la otra
    lo que yo cifre con la llave publica solo lo abre la llave privada

Esto se usa en git para evitar password cracking osea que me hackeen la informacion,es mucho mas seguro
y evito estar colocando el usuario y la contraseña cada nada
Cuando se crea un ssh con github yo envio mi llave publica a git, git cifra la llave publica de el con mi llave publica y me lo envia a mi
    para tener una comuniacion segura

la llaves shh no son por repositorio o por proyecto, son por persona
el algoritmo rsa es el mas usado  4096 es la mas segura

Cuando una carpeta empieza por punto significa que esta oculta
    asi que para ir a carpetas ocultas se debe colocar cd .ssh
        el punto indica que cambiame a un directorio oculto y bueno tambien todos los archivos ocultos tienen ese punto del inicio

pst cd / funciona como un acceso rapido a las principales carpetas, no importa la ruta en la que estes te va a llevar rapido

cd ~significa lleveme al home


SIEMPRE CREAR UNA LLAVE SSH POR REPOSITORIO Y POR MAQUINA, ES MEJOR NUNCA ENVIAR LAS LLAVES
SI CREE LA LLAVE SSH LA DEBO ASOCIAR A MI REPOSITORIO con el comando git remote set-url origin <url del repositorio>

hay una forma de colocar alias a a los comandos de git, si ni estoy mal es una bondad de Linux
pero debo de investigarla
el comando seria:
    cuidado con los espacios
    alias <nombre>="<git command>"
    alias seeStructure="git log --all --graph --decorate --oneline"


Los archivos binarios no se deberian subir a repositoros como lo son las imagenes

Normalmente se bloque la rama master para que no se pueda hacer un merge sin autorizacion

Para crear una un readme.md hay una pagina llamada editor.md donde puedo generar
algun diseño que me guste

Hay algo llamado git pages que funciona como servicio de hosting como heroku
    ingresas a traves de : pages.github.com


git hooks
    son eventos que se disparan despues de algun git command que se haya configurado
    tienes que ir a la carpeta oculata de git, ir a hooks
    crear tu archiv de tipo sh 
    lo guardas con uno de los nombres que permite git(No es cualquiera que quieras)
        debe ser uno especifico de los nombres de los hooks que provee git,revisar en web los nombres
    darle permisos de ejecución con chmod+x <nombre del archivo>